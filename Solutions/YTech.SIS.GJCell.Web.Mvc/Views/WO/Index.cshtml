@{
    ViewBag.Title = "Daftar Repair Order";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@if (false)
{ <script src="@Url.Content("~/Scripts/jquery-1.9.1-vsdoc.js")" type="text/javascript"></script> }

<style type="text/css">
    .k-Print {
        background-image: url('Content/img/rtg_print.gif');
    }

    .k-Mutation {
        background-image: url('Content/img/window16.gif');
    }

    .k-SPart {
        background-image: url('Content/img/generic_link_16.png');
    }
</style>
@(Html.Kendo()
.Grid<YTech.SIS.GJCell.Web.Mvc.Controllers.ViewModels.WOViewModel>()
    .Name("Grid")
    .Columns(columns =>
    {
        columns.Template(e => { }).ClientTemplate("<img class='img-new' src='" + Url.Content("~/Content/img/new_header.png") + "' alt='#: data.HaveBeenRead #' /> <img class='img-urgent' src='" + Url.Content("~/Content/img/error3.gif") + "' style='width:16px;height:16px;' alt='#: data.WOPriority #' />").Width(30).Title(" ");
        columns.Bound(p => p.WONo).Width("85px");
        columns.Bound(p => p.CustomerName).Width("auto");
        columns.Bound(p => p.WODate).Format("{0:dd-MMM-yy}").Width("auto");
        columns.Bound(p => p.WOUnitName).Width("auto");
        columns.Bound(p => p.MerkName).Width("auto");
        columns.Bound(p => p.WOUnitImei).Width("auto");
        columns.Bound(p => p.WOStartDate).Format("{0:dd-MMM-yy}").Width("auto");
        columns.Bound(p => p.WOLastStatus).Width("auto");
        columns.Bound(p => p.WOEstFinishDate).Format("{0:dd-MMM-yy HH:mm}").Width("auto");
        columns.Bound(p => p.WOTakenDate).Format("{0:dd-MMM-yy}").Width("auto");
        columns.Bound(p => p.WOReferenceNo).Width("auto");
        columns.Bound(p => p.WOInvoiceNo).Width("auto");
        columns.Bound(p => p.WOUnitLastTrack).Width("auto");
        columns.Command(command =>
        {
            command.Custom("Mutation").Click("MutationWO").HtmlAttributes(new { style = "min-width:20px;" });
            command.Custom("SPart").Click("RequestWOSPart").HtmlAttributes(new { style = "min-width:20px;" });
            command.Custom("Print").Click("PrintWO").HtmlAttributes(new { style = "min-width:20px;" });
            command.Edit().Text(" ").HtmlAttributes(new { style = "min-width:20px;" });
            command.Destroy().Text(" ").HtmlAttributes(new { style = "min-width:20px;" });
        })
            .Width("215px");
    })
    .ToolBar(toolbar =>
    {
        toolbar.Template(@<text>
<div class="k-toolbar k-grid-toolbar k-grid-top">
    <a class="k-button k-button-icontext k-grid-add" href="/ServiceTracker/WO/WO_Read?Grid-mode=insert"><span class="k-icon k-add"></span>Tambah RO Baru</a>

    <label class="status-label" for="status">Filter status RO :</label>
    @(Html.Kendo().DropDownList()
                            .Name("status")
                            .OptionLabel("All")
                            .DataTextField("Text")
                            .DataValueField("Value")
                            .AutoBind(false)
                            .Events(e => e.Change("searchWO"))
                            .HtmlAttributes(new { style = "min-width:150px;" })
                            .BindTo((System.Collections.IEnumerable)ViewData["wo_status"])
                        )

    <label class="search-label" for="search">Pencarian :</label>
    @(Html.TextBox("search", "", new { @class = "k-textbox" }))
    @(Html.Button("searchButton", "Cari", HtmlButtonType.Button, "searchWO(false);", new { @class = "k-button" }))
    @(Html.Button("resetButton", "Reset", HtmlButtonType.Button, "searchWO(true);", new { @class = "k-button" })) | 
    @Html.Partial("_CountDown")
    @Html.Partial("ColourLegend")
</div>
</text>);
    })
    .Editable(editable => editable.Mode(GridEditMode.PopUp).TemplateName("WO").Window(win => win.Width(650).Modal(true)))
    .Pageable()
    .Sortable()
    .Scrollable()
    .Selectable()
    .Filterable()
    .Groupable()
    .ColumnMenu()
    .Resizable(resize => resize.Columns(true))
    .Reorderable(reorder => reorder.Columns(true))
    .HtmlAttributes(new { style = "height:500px;" })
    .ClientDetailTemplateId("woStatusTemplate")
    .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(20)
        .Batch(false)
        .ServerOperation(true)
        .Events(events => events.Error("error_handler").RequestEnd("onRequestEnd"))
        .Create(create => create.Action("WO_Create", "WO"))
        .Read(read => read.Action("WO_Read", "WO"))
        .Update(update => update.Action("WO_Update", "WO"))
        .Destroy(destroy => destroy.Action("WO_Destroy", "WO"))
        .Model(x =>
        {
            //string woNo = Html.Action("GetWONo", "WO").ToHtmlString();
            x.Id(p => p.WOID);
            x.Field(c => c.WONo).DefaultValue("-Auto Generate-");
            x.Field(c => c.WODate).DefaultValue(DateTime.Today);
            x.Field(c => c.WOLastStatus).DefaultValue(YTech.SIS.GJCell.Enums.EnumWOStatus.Baru_Masuk.ToString());
            x.Field(c => c.WOPriority).DefaultValue(YTech.SIS.GJCell.Enums.EnumPriority.Normal.ToString());
            x.Field(c => c.WOServiceFee).DefaultValue(0);
            x.Field(c => c.WOSPartTotal).DefaultValue(0);
            x.Field(c => c.WOTotal).DefaultValue(0);
        }
    ))
    .Events(e => e.DataBound("onDataBound").Edit("onEdit").Cancel("onCancel"))
)
@(Html.Hidden("SelectedUid"))

<script id="woStatusTemplate" type="text/kendo-tmpl">
    @(Html.Kendo().Grid<YTech.SIS.GJCell.Web.Mvc.Controllers.ViewModels.WOStatusViewModel>()
            .Name("grid_#=WOID#")
            .Columns(columns =>
            {
                columns.Bound(o => o.WOStatusDate).Format("{0:dd-MMM-yy HH:mm}").Width("auto");
                columns.Bound(o => o.WOStatus).Width("auto");
                columns.Bound(o => o.WOStatusUser).Width("auto");
                columns.Bound(o => o.WOStatusBrokenDesc);
                columns.Bound(o => o.WOStatusStartDate).Format("{0:dd-MMM-yy}").Width("auto");
                columns.Bound(o => o.WOStatusFinishDate).Format("{0:dd-MMM-yy HH:mm}").Width("auto");
            })
            .DataSource(dataSource => dataSource
                .Ajax()
                .ServerOperation(true)
                .Read(read => read.Action("WOStatus_Read", "WO", new { woID = "#=WOID#" }))
            )
            .Sortable()
            .ToClientTemplate()
    )
</script>


@(Html.Kendo().Window()
    .Name("mutation")
    .Title("Mutasi Unit")
     .Content(@<text>
@Html.Partial("WOMutation")
</text>)
    .Draggable()
    .Resizable()
    .Width(300)
    .Height(175)
    .Modal(true)
    .Visible(false)
)

@(Html.Kendo().Window()
    .Name("spart")
    .Title("Request Spare Part")
     .Content(@<text>
@Html.Partial("RequestWOSPart")
</text>)
    .Draggable()
    .Resizable()
    .Width(300)
    .Height(250)
    .Modal(true)
    .Visible(false)
)

<script type="text/javascript">
    $(function () {
        $('#btnSubmitMutation').click(function () {
            //alert('formMutation submit');
            var formMutation = $('#formMutation');
            //if ($(formMutation).valid()) {
            //alert('formMutation valid');
            //alert(formMutation.serialize());

            var woMutationUrl = '@(Url.Action("WOMutation", "WO", new { random = DateTime.Now.ToFileTimeUtc().ToString() }))';
            //alert(woMutationUrl);
            $.ajax({
                url: woMutationUrl,
                type: 'POST',
                data: $(formMutation).serialize(),
                success: function (result) {
                    //alert(result);
                    //$('#result').html(result);

                    //close mutation window
                    $("#mutation").data("kendoWindow").close();
                    //call refresh grid and reset timer
                    $("#RefreshGrid").click();

                }
            });
            //}
            return false;
        });
        $('#btnCancelMutation').click(function () {
            //close mutation window
            $("#mutation").data("kendoWindow").close();
            //call refresh grid and reset timer
            $("#RefreshGrid").click();
        });

        $('#btnSubmitSPart').click(function () {
            //alert('formMutation submit');
            var formWOSPart = $('#formWOSPart');
            //if ($(formMutation).valid()) {
            //alert('formMutation valid');
            //alert(formMutation.serialize());

            var woSPartUrl = '@(Url.Action("RequestWOSPart", "WO", new { random = DateTime.Now.ToFileTimeUtc().ToString() }))';
            //alert(woMutationUrl);
            $.ajax({
                url: woSPartUrl,
                type: 'POST',
                data: $(formWOSPart).serialize(),
                success: function (result) {
                    //alert(result);
                    //$('#result').html(result);

                    //close mutation window
                    $("#spart").data("kendoWindow").close();
                    //call refresh grid and reset timer
                    $("#RefreshGrid").click();

                }
            });
            //}
            return false;
        });
        $('#btnCancelSPart').click(function () {
            //close mutation window
            $("#spart").data("kendoWindow").close();
            //call refresh grid and reset timer
            $("#RefreshGrid").click();
        });

        var SPartQty = $("#WOSPartQty").data("kendoNumericTextBox");
        SPartQty.bind("change", function () {
            CalculateSPartTotal();
        });
        var SPartPrice = $("#WOSPartPrice").data("kendoNumericTextBox");
        SPartPrice.bind("change", function () {
            CalculateSPartTotal();
        });
        var SPartTotal = $("#WOSPartTotal").data("kendoNumericTextBox");
        SPartTotal.readonly();

        //var WOSPartTotal = $("#WOSPartTotal").data("kendoNumericTextBox");
        //WOSPartTotal.bind("change", function () {
        //    CalculateWOTotal();
        //});

        //var WOServiceFee = $("#WOServiceFee").data("kendoNumericTextBox");
        //WOServiceFee.bind("change", function () {
        //    CalculateWOTotal();
        //});
        //var WOTotal = $("#WOTotal").data("kendoNumericTextBox");
        //WOTotal.readonly();

    });

    function CalculateWOTotal() {
        var WOSPartTotal = $('#WOSPartTotal').data('kendoNumericTextBox').value();
        var WOServiceFee = $('#WOServiceFee').data('kendoNumericTextBox').value();
        var WOTotal = WOSPartTotal + WOServiceFee;
        $('#WOTotal').data('kendoNumericTextBox').value(WOTotal);
    }

    function searchWO(reset) {
        //reset search textbox if reset button clicked
        //alert(reset);
        if (reset) {
            //alert("reset");
            $("#search").val("");
        }

        grid = $("#Grid").data("kendoGrid");
        //search by woNO
        var textSearch = $("#search").val();
        //alert(textSearch);
        //search by status
        var status = $("#status").val();
        //alert(status);

        if (textSearch || status) {
            //alert("search");
            var andFilter = { logic: "and", filters: [] };
            var orFilter = { logic: "or", filters: [] };
            andFilter.filters.push({ field: "WOLastStatus", operator: "contains", value: status });
            orFilter.filters.push({ field: "WONo", operator: "contains", value: textSearch });
            orFilter.filters.push({ field: "CustomerName", operator: "contains", value: textSearch });
            orFilter.filters.push({ field: "WOReferenceNo", operator: "contains", value: textSearch });
            orFilter.filters.push({ field: "WOUnitImei", operator: "contains", value: textSearch });
            orFilter.filters.push({ field: "WOInvoiceNo", operator: "contains", value: textSearch });
            orFilter.filters.push({ field: "WOUnitSn", operator: "contains", value: textSearch });
            andFilter.filters.push(orFilter);
            grid.dataSource.query({ filter: andFilter });
        } else {
            grid.dataSource.filter({});
        }
    }

    function PrintWO(e) {
        e.preventDefault();

        //set datasource for print WO
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var woId = dataItem.WOID;
        var getPrintWOUrl = '@(Url.Action("PrintWOFactur", "WO", new { random = DateTime.Now.ToFileTimeUtc().ToString() }))' + '&woId=' + woId;
        $.ajax({
            type: 'POST',
            url: getPrintWOUrl,
            error: function (response) {
                alert("error: " + response);
            }, success: function (response) {
                if (!response.Success)
                    alert("Error : " + response.Message);
                else {
                    var urlreport = '@(Url.Content("~/ReportViewer.aspx?rpt="))' + response.UrlReport;
                    //alert(navigator.userAgent);
                    //alert(navigator.userAgent.indexOf("MSIE") == -1);
                    //if not IE browser, use browser print features
                    if (navigator.userAgent.indexOf("MSIE") == -1)
                        urlreport += "&toolbar=0&autoPrint=1";
                    window.open(urlreport);
                }
            }
        });
    }

    function MutationWO(e) {
        e.preventDefault();

        //set datasource for print WO
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var woId = dataItem.WOID;
        $("#MutationWOId").val(woId);

        //reset user name dropdownlist selected index
        var ddlUsers = $("#UserName").data("kendoDropDownList");
        ddlUsers.select(0);

        $("#mutation").data("kendoWindow").center();
        $("#mutation").data("kendoWindow").open();
    }

    function RequestWOSPart(e) {
        e.preventDefault();

        //set datasource for print WO
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var woId = dataItem.WOID;
        $("#WOId").val(woId);

        //reset user name dropdownlist selected index
        var ddlUsers = $("#UserName").data("kendoDropDownList");
        ddlUsers.select(0);

        $("#spart").data("kendoWindow").center();
        $("#spart").data("kendoWindow").open();
    }

    function onSPartChange() {
        var spart = $('#SPartId').data('kendoDropDownList').value();
        //call set price of spart
        var getSPartUrl = '@(Url.Action("GetSPart", "SPart", new { random = DateTime.Now.ToFileTimeUtc().ToString() }))' + '&sPartId=' + spart;
        $.ajax({
            type: 'POST',
            url: getSPartUrl,
            error: function (response) {
                alert("error: " + response);
            }, success: function (response) {
                //alert(response.SPartServicePrice1);
                $('#WOSPartPrice').data('kendoNumericTextBox').value(response.SPartServicePrice1);
                CalculateSPartTotal();
            }
        });
    }
    function CalculateSPartTotal() {
        var qty = $('#WOSPartQty').data('kendoNumericTextBox').value();
        var price = $('#WOSPartPrice').data('kendoNumericTextBox').value();
        var total = qty * price;
        $('#WOSPartTotal').data('kendoNumericTextBox').value(total);
    }

    function onRequestEnd(e) {
        //RequestEnd handler code
        //bug : error when update after insert or update new data, no id catched
        //bug fix : refresh after insert new data, 
        //alert(e.type);
        if (e.type === "create" || e.type === "update" || e.type === "destroy") {
            //check for errors in the response
            if (e.response == null || e.response.Errors == null) {
                //call refresh grid and reset timer
                $("#RefreshGrid").click();
            }
        }
    }

    function onEdit(e) {
        //stop interval
        clearInterval(refreshIntervalId);

        //alert("onedit");
        // get wo id
        var woId = e.container.find("input[name=WOID]").val();
        //alert(woId);
        //get uid of selected row
        var dataItem = $("#Grid").data("kendoGrid").dataSource.get(woId);
        var uid = $("#Grid").find("tr[data-uid='" + dataItem.uid + "']").attr("data-uid");
        //alert("selected data uid = " + uid);
        //set uid of temporary hidden input
        $("#SelectedUid").val(uid);

        //log when open wo
        var getLogWOUrl = '@(Url.Action("LogWO_Open", "WO", new { random = DateTime.Now.ToFileTimeUtc().ToString() }))' + '&woId=' + woId;
        $.ajax({
            type: 'POST',
            url: getLogWOUrl,
            error: function (response) {
                alert("error: " + response);
            }, success: function (response) {
                if (!response.Success)
                    alert("Error : " + response.Message);
            }
        });
    }

    function onCancel(e) {
        //call refresh grid and reset timer
        $("#RefreshGrid").click();
    }

    function onDataBound(e) {
        //edit data when double click
        var grid = $('#Grid').data().kendoGrid;
        $('#Grid tbody tr').dblclick(function () {
            grid.editRow(this);
        })
        //hide image new if have been read
        $("img.img-new[alt=true]").hide();
        //hide image urgent if priority is normal
        $("img.img-urgent[alt=Normal]").hide();

        //set print icon image to print button
        $("a.k-grid-Print").addClass("k-grid-Print-eee");
        $("a.k-grid-Print").html("<span class='k-icon k-Print'></span>");

        //set print icon image to mutation button
        $("a.k-grid-Mutation").addClass("k-grid-Mutation-eee");
        $("a.k-grid-Mutation").html("<span class='k-icon k-Mutation'></span>");

        //set print icon image to SPART button
        $("a.k-grid-SPart").addClass("k-grid-SPart-eee");
        $("a.k-grid-SPart").html("<span class='k-icon k-SPart'></span>");

        //set bg color based on last status
        SetBgColor();
    }

    function SetBgColor() {
        //set bg color based on last status
        var grid = $('#Grid').data().kendoGrid;
        var data = grid.dataSource.data();
        $.each(data, function (i, row) {
            var lastStatus = row.WOLastStatus;
            var color = "white";
            if (lastStatus == "Baru_Masuk") {
                color = "#D5D5CA";
            }
            else if (lastStatus == "Sedang_Dikerjakan") {
                color = "#EBEB99";
            }
            else if (lastStatus == "Menunggu_Persetujuan") {
                color = "#9494FF";
            }
            else if (lastStatus == "Sudah_Setuju") {
                color = "gray";
            }
            else if (lastStatus == "Menunggu_Part") {
                color = "#FF66A3";
            }
            else if (lastStatus == "Kirim_ke_SC") {
                color = "#2BB2DD";
            }
            else if (lastStatus == "Terima_dari_SC") {
                color = "#1498D1";
            }
            else if (lastStatus == "Selesai") {
                color = "#70DB70";
            }
            else if (lastStatus == "Cancel_Teknisi") {
                color = "#FF0000";
            }
            else if (lastStatus == "Cancel_Konsumen") {
                color = "#FF0000";
            }
            else if (lastStatus == "Closed") {
                color = "#66C2FF";
            }
            //Change the background color of lastStatus
            $('tr[data-uid="' + row.uid + '"]').css("background-color", color);
        });
    }

    function onWOLastStatusChange() {
        //set finish date to now when status is selesai
        var lastStatus = $('#WOLastStatus').val();
        //alert(lastStatus);
        if (lastStatus == "Selesai") {
            var getServerDate = new Date();
            //alert(getServerDate);
            var datepicker = $("#WOEstFinishDate").data("kendoDateTimePicker");
            datepicker.value(getServerDate);

            //get uid from temporary hidden input
            var uid = $("#SelectedUid").val();

            //flag datasource to dirty
            var dataSource = $("#Grid").data("kendoGrid").dataSource;
            var item = dataSource.getByUid(uid);
            //alert("before update is dirty = " + item.dirty);
            item.WOEstFinishDate = getServerDate;
            item.dirty = true;
        }
    }

    function onCustomerChange() {
        //set hidden field for customer id
        var cust = $('#Customer').data('kendoDropDownList').value();
        //call set customer to set datasource change
        SetCustomer(cust);
    }

    function OpenNewCustomer() {
        //set window to center of display
        $("#NewCustomerWindow").data("kendoWindow").center();
        $("#NewCustomerWindow").data("kendoWindow").open();
    }

    function onCustClose(e) {
        //refresh datasource for dropdownlist after insert new customer
        $('#Customer').data("kendoDropDownList").dataSource.read();
        $('#Customer').data("kendoDropDownList").refresh();

        //get last created customer and set to value
        var getlastcustomerurl = '@(Url.Action("GetLastCreatedCustomer", "Customer", new { random = DateTime.Now.ToFileTimeUtc().ToString() }))';

        $.ajax({
            type: 'POST',
            url: getlastcustomerurl,
            error: function (response) {
                alert("error: " + response);
            }, success: function (response) {
                //call set customer to set datasource change
                SetCustomer(response);
            }
        });
    }

    function SetCustomer(custId) {
        //alert(custId);
        $('#Customer').data('kendoDropDownList').value(custId);
        $('#HiddenCustomerId').val(custId);

        //get uid from temporary hidden input
        var uid = $("#SelectedUid").val();

        //flag datasource to dirty
        var dataSource = $("#Grid").data("kendoGrid").dataSource;
        var item = dataSource.getByUid(uid);
        //alert("before update is dirty = " + item.dirty);
        item.HiddenCustomerId = custId;
        item.dirty = true;
        //alert("after update is dirty = " + item.dirty);
    }

    function OpenWOHistories() {
        var grid = $("#HistoriesWOGrid").data("kendoGrid");
        var imei = $("#WOUnitImei").val();
        grid.dataSource.transport.options.read.url = "/SIS/WO/WO_Read_By_Imei?imei=" + imei;
        grid.dataSource.read();

        //set window to center of display
        $("#WOHistoriesWindow").data("kendoWindow").center();
        $("#WOHistoriesWindow").data("kendoWindow").open();
    }

    //show server errors if any
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";

            var grid = $('#Grid').data('kendoGrid');
            grid.one("dataBinding", function (e) {
                e.preventDefault();   // cancel grid rebind
            });
            //var gridElement = grid.editable.element;

            //var validationMessageTemplate = kendo.template(
            //    "<div id='#=field#_validationMessage' " +
            //        "class='k-widget k-tooltip k-tooltip-validation " +
            //            "k-invalid-msg field-validation-error' " +
            //        "style='margin: 0.5em;' data-for='#=field#' " +
            //        "data-val-msg-for='#=field#' role='alert'>" +
            //        "<span class='k-icon k-warning'></span>" +
            //        "#=message#" +
            //        "<div class='k-callout k-callout-n'></div>" +
            //    "</div>");

            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                    //gridElement.find("[data-valmsg-for=" + key + "],[data-val-msg-for=" + key + "]")
                    //.replaceWith(validationMessageTemplate({ field: key, message: value.errors[0] }));
                    //gridElement.find("input[name=" + key + "]").focus();
                }
            });
            alert(message);
        }
    }
</script>
